<?php
// $Id$

/**
 * @file
 *  Tests for fingerprint server module
 *
 *  Copyright 2010 by Kornel Lugosi (Coornail)
 *  Pronovix
 */

class fingerprint_server_registration extends DrupalWebTestCase {
  var $info;
  /**
  * Implementation of getInfo().
  */
  public static function getInfo() {
    return array(
      'name' => t('Fingerprint server registration'),
      'description' => t('Registration and email sending'),
      'group' => t('Fingerprint'),
    );
  }


  /**
  * Implementation of setUp().
  */
  public function setUp() {
    //parent::setUp('features', 'services', 'services_keyauth', 'content', 'number', 'fingerprint', 'fingerprint_server');
    parent::setUp('fingerprint_server', 'services', 'services_keyauth', 'content', 'number', 'fingerprint');
  }


  /**
   * Tests installation and if the fields are ready
   */
  public function testInstall() {
    $fingerprint_user = $this->drupalCreateUser(array('create fingerprint content'));
    $this->drupalLogin($fingerprint_user);
    $this->drupalGet('node/add/fingerprint');
    $this->assertText('Drupal.org issue number', t('Issue number field found'));
  }


  /**
   * The fields should be removed after uninstall
   */
  public function testUninstall() {
    drupal_uninstall_module('fingerprint_server');

    $fingerprint_user = $this->drupalCreateUser(array('create fingerprint content'));
    $this->drupalLogin($fingerprint_user);
    $this->drupalGet('node/add/fingerprint');
    $this->assertNoText('Drupal.org issue number', t('Issue number field is removed'));
  }


  /**
   * Tests user authentication
   */
  public function testAuthenticate() {
    // Submit anonymous node trough xmlrpc
    $node = array(
      'title' => user_password(),
      'body' => serialize(array('export_version' => '0.2')),
    );
    module_load_include('inc', 'fingerprint_server', 'fingerprint_server.services');

    // Register a key
    $key = fingerprint_services_register_key();
    $key = $key['kid'];
    $node['fingerprint_key'] = $key;

    fingerprint_services_save($node); // @todo check here

    // Log in as anonymous user
    $anon_user =  $this->drupalCreateUser(array('access anonymous fingerprint content'));
    $this->drupalLogin($anon_user);

    // The node should be public
    $this->drupalGet('node/1');
    $this->assertResponse(200, 'Node is visible for the anonymous user');

    $this->drupalLogout();

    // The user registers
    $fingerprint_user = $this->drupalCreateUser(array('delete own fingerprint content', 'access own fingerprint content', 'access anonymous fingerprint content'));
    $this->drupalLogin($fingerprint_user);

    // Goes to my account page
    $this->drupalGet('user/'. $fingerprint_user->uid);
    $this->assertLink('Fingerprint');
    $this->clickLink('Fingerprint');

    // No key should be registered yet
    $this->assertText('No key associated with your account');

    // Click on the register link
    $this->assertLink('Associate project');
    $this->clickLink('Associate project');

    // Fill in the form
    $edit = array(
      'project_name' => $this->randomName(),
      'kid' => $key,
    );
    $this->drupalPost($this->getUrl(), $edit, 'Associate');
    $this->assertText('Key associated');

    // On the profile page it should appear
    $this->drupalGet('user/'. $fingerprint_user->uid);
    $this->clickLink('Fingerprint');
    $this->assertText($key);

    // The node should be visible for the user
    $this->drupalGet('node/1');
    $this->assertResponse(200, 'Node is visible for the owner');
    $this->assertEqual($fingerprint_user->uid, db_result(db_query('SELECT uid FROM {node} WHERE nid=1')), 'Node is owned by the associated user');

    // For everyone else the node should not be visible
    $this->drupalLogout();
    $this->drupalLogin($anon_user);
    $this->drupalGet('node/1');
    $this->assertResponse(403, 'Node not visible for the anonymous');

    $this->drupalLogout();
    $this->drupalLogin($fingerprint_user);

    // Submiting an another node by the authenticated user
    $node = array(
      'title' => user_password(),
      'body' => serialize(array('export_version' => '0.2')),
      'fingerprint_key' => $key,
    );

    fingerprint_services_save($node); // @todo check here

    // Node should be visible for the user
    $this->drupalGet('node/2');
    $this->assertResponse(200, 'Node is visible for the owner');
    $this->assertEqual($fingerprint_user->uid, db_result(db_query('SELECT uid FROM {node} WHERE nid=2')), 'Node is owned by the associated user');

    $this->drupalLogout();
    $this->drupalLogin($anon_user);
    $this->drupalGet('node/2');
    $this->assertResponse(403, 'Node not visible for the anonymous');
  }

}


<?php
// $Id$

/**
 * Implementation of hook_install().
 *
 * Enable the necessary modules that are required in hook_enable()
 *
 * @todo find a better solution for making sure content_node_field exists
 */
function fingerprint_server_install() {
  module_enable(array('content'));
  // Forcefully install the schema
  drupal_install_schema('content');
  module_enable(array('number'));
  module_enable(array('features'));
  module_enable(array('fingerprint'));

}


/**
 * Implementation of hook_schema().
 */
function fingerprint_server_schema() {
  $schema['fingerprint_keys'] = array(
    'description' => t('Stores fingerprint and services key relations'),
    'fields' => array(
      'kid' => array(
        'description' => t('Services key id'),
        'type' => 'varchar',
        'length' => '32',
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => t('User id'),
        'type' => 'int',
        'not null' => TRUE,
      ),
      'project_name' => array(
        'description' => t('Name of the project'),
        'type' => 'varchar',
        'length' => '64',
        'not null' => TRUE,
      ),
      'date' => array(
        'description' => t('Current date'),
        'type' => 'int',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('kid'),
  );

  $schema['fingerprint_node'] = array(
    'description' => t('Stores which node was saved with which key'),
    'fields' => array(
      'nid' => array(
        'description' => t('Node id'),
        'type' => 'int',
        'not null' => TRUE,
      ),
      'kid' => array(
        'description' => t('Services key id'),
        'type' => 'varchar',
        'length' => '32',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('nid'),
  );

  return $schema;
}


/**
 * Implementation of hook_enable().
 *
 * Create the issue field instance
 */
function fingerprint_server_enable() {
  module_enable(array('content', 'number', 'features'));

  $field = array(
        'label' => 'Issue number',
        'field_name' => 'field_issue_number',
        'type' => 'number_integer',
        'widget_type' => 'number',
        'change' => 'Change basic information',
        'weight' => '-2',
        'description' => 'Drupal.org issue number',
        'default_value' =>
        array (
          0 =>
          array (
            'value' => '',
            '_error_element' => 'default_value_widget][field_issue_number][0][value',
            ),
          ),
        'default_value_php' => '',
        'default_value_widget' => NULL,
        'required' => 0,
        'multiple' => '0',
        'min' => '',
        'max' => '',
        'prefix' => '',
        'suffix' => '',
        'allowed_values' => '',
        'allowed_values_php' => '',
        'op' => 'Save field settings',
        'module' => 'number',

        'widget_module' => 'number',
        'columns' =>
          array (
              'value' =>
              array (
                'type' => 'int',
                'not null' => false,
                'sortable' => true,
                ),
              ),
        'display_settings' =>
          array (
              'label' =>
              array (
                'format' => 'above',
                'exclude' => 0,
                ),
              'teaser' =>
              array (
                'format' => 'default',
                'exclude' => 0,
                ),
              'full' =>
              array (
                'format' => 'default',
                'exclude' => 0,
                ),
              4 =>
              array (
                'format' => 'default',
                'exclude' => 0,
                ),
              ),
              );
  module_load_include('inc', 'content', 'includes/content.crud');
  $field['type_name'] = 'fingerprint';
  content_field_instance_create($field);

  drupal_install_schema('fingerprint_server');
  // To regenerate services method cache
  cache_clear_all('services:methods', 'cache');
}


/**
 * Implementation of hook_uninstall().
 */
function fingerprint_server_uninstall() {
  module_load_include('inc', 'content', 'includes/content.crud');
  content_field_instance_delete('field_issue_number', 'fingerprint', TRUE);

  drupal_uninstall_schema('fingerprint_server');
  // To regenerate services method cache
  cache_clear_all('services:methods', 'cache');
}

